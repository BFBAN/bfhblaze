#
# Configuration file for the stress tester
#

# Define the connection and protocol parameters
connection-info = {
    protocol = fire
    encoder = heat
    decoder = heat

    # Total number of connections to use
    num-connections = 10000

    # Control whether SSL is used or not
    secure = false
}

#
# This following block controls how instances are started up.
#
startup = {
    # Number of instances to start up in a given pass
    # A block size of 0 will start all instances simultaneously
    block-size = 1000

    # Delay between starting instances in milliseconds
    instance-delay = 100

    # Delay between starting blocks in milliseconds
    block-delay = 500
}

#
# Define the account/authentication parameters used for account creation and authentication
#
account = {
    # Specify the starting integer value to use when generating email addresses.  This value
    # should be adjusted when multiple stress tester instances are running in parallel against the
    # same blaze server to avoid overlap of account names.  For example, if each stress tester
    # instance was configurated for 1000 connections, then the first config file would set this
    # to 0 and the second instance would set this to 1000.
    start-index = 1

    # Define the email address pattern used for authentication and account creation
    email-format = "blaze-stress%05x@ea.com"

    # Define the password used for authentication each account
    password = "password"

    # Define the persona format used when creating personas.  This is not used for authentication.
    # Authentication will just choose the first available persona associated with a master account.
    persona-format = "s%05x"

    express-pc-login = true

    # Define the namespace used when creating personas.
    namespace = "description"

    # Define the TOS version used when creating new accounts.
    tos = "2.0"

    # define the authentication mechanism to use: pc, ps3, or xbox360
    type = pc 
}

#
# Define the list of stress modules that will be instantiated
#
modules = [ registration ]

#
# Define how the available instances/connections are distributed amongst the different modules
#
distribution = {
    registration = 1.0
}

#
# Configuration data specific to the registration module
#
registration = {

    # Define which RPC to use
    #action = addrow 
    #action = ban 
    #action = check
    #action = remrow
    #action = returnusers
    #action = updateflags
    #action = updatenote
    action = simulateProd

    # only applies to simulateProd
    sim = {
        probability = {
            addrow = 30
            ban = 1
            check = 0 
            remrow = 3
            returnusers = 60
            updateflags = 1
            updatenote = 5
        }
        maxSleep = 2000
    }

    # Define the number of milliseconds between RPC calls
    delay = 10000

    # Control whether a stress instance needs to authenticate its user before issuing its configured
    # RPC calls.
    login = true
}

logging = {
    level = INFO 
}


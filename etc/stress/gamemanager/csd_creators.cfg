#
# Configuration file for the stress tester
#

# Define the connection and protocol parameters
connection-info = {
    protocol = fire
    encoder = heat
    decoder = heat

    # Total number of connections to use
    num-connections = 1000

    # Control whether SSL is used or not
    secure = false
}

#
# This following block controls how instances are started up.  To avoid overloading the server/DB,
# startup of stress instances is done in chunks with delays between each chunk until all instances
# have been started.  Care must be used when setting the block-delay and instance-delay values.
# (instance-delay * block-size) should be less than block-delay or you'll end up with overlap.
# Overlapped starts will still work but may not be the desired behaviour.
#
startup = {
    # Number of instances to start up in a given pass
    # A block size of 0 will start all instances simultaneously
    block-size = 10

    # Delay between starting instances in milliseconds
    instance-delay = 16

    # Delay between starting blocks in milliseconds
    block-delay = 233
}

#
# This following block lists servers in addition to the server passed in the command line the tester
# attempt to connect instances to.  For example if there are two servers listed here, and one in the command line,
# then instance 0 will connect to the command line server, 1 = server-0, 2 = server-1, etc.   Note if no server
# specified in the command line, the stress tester will still use the servers listed below if any are listed.
# 
servers = {
    server-0 = "gosapp03.eao.abn-iad.ea.com:12000"
    server-1 = "gosapp03.eao.abn-iad.ea.com:12005"
    server-2 = "gosapp03.eao.abn-iad.ea.com:12010"
    server-3 = "gosapp03.eao.abn-iad.ea.com:12015"
    server-4 = "gosapp04.eao.abn-iad.ea.com:12000"
    server-5 = "gosapp04.eao.abn-iad.ea.com:12005"
}

#
# Define the account/authentication parameters used for account creation and authentication
#
account = {
    # Specify the starting integer value to use when generating email addresses.  This value
    # should be adjusted when multiple stress tester instances are running in parallel against the
    # same blaze server to avoid overlap of account names.  For example, if each stress tester
    # instance was configurated for 1000 connections, then the first config file would set this
    # to 0 and the second instance would set this to 1000.
    start-index = 0

    # Define the email address pattern used for authentication and account creation
    email-format = "blaze-stress%05x@ea.com"

    # Define the password used for authentication each account
    password = "password"

    # Define the persona format used when creating personas.  This is not used for authentication.
    # Authentication will just choose the first available persona associated with a master account.
    persona-format = "s%05x"

    # Define the namespace used when creating personas.
    namespace = "description"
    
    # Specify whether to use express login instead of platform-specific login.
    express-pc-login = true

    # Define the TOS version used when creating new accounts.
    tos = "2.0"       
}

#
# Define the list of stress modules that will be instantiated
#
modules = [ gamemanager ]

#
# Define how the available instances/connections are distributed amongst the different modules
#
distribution = {
    gamemanager = 1.0
}

#
# Configuration data specific to the playgroups module
#
gamemanager = {
    # Define parameters used for the RPC action

    # Define the number of milliseconds between RPC calls
    delay = 1000
    
    # Control whether instance needs to authenticate its user before issuing its configured
    # RPC calls.
    login = true
    
    # Game Manager Utility config
    # Control the fraction of instances that create games for test
    gmMaxGames = 1000
    gmGamePlayerLowerLimit = 20
    gmGamePlayerSeed = 0
    gmGamePlayerMin = 4
    gmGameLifespan = 1500
    gmGameLifespanDeviation = 120
    gmGameStartTimer = 180        
    gmGamePlayerLifespan = 1500
    gmGamePlayerLifespanDeviation = 900
    gmNetworkTopology = CLIENT_SERVER_DEDICATED
    gmGameSettingsRandomUpdates = 0.0  
    gmCensusSubscribe = false    
    gmGameProtocolVersionString = stressTester  
    
    # GameManagerModule config
    gmmRoleIdleLifespan = 30
      
    # Control frequency of RPC calls for admins (value * 100 = pct.)    
    gmmKickPlayerRate = 0.001
    gmmSetAttributeRate = 0.00
    gmmSetPlayerAttributeRate = 0.00
    gmmBatchSetAttributesPreGame = true
    gmmBatchSetAttributesPostGame = true
    
    # Join Methods
    gmmJoinByUserRate = 0.15
    gmmJoinByBrowserRate = 0.15
    gmmBrowserListGameResetRate = 0.01
    
    # GameBrowser configuration
    listLife = 120
    listSize = 25
    subscriptionLists = true
    gbrGameSizeRuleMinFit = OSDK_matchAny
      
    # Control Game Attributes    
       gmmGameAttrKeys = [ OSDK_gameMode, OSDK_matchupHash, OSDK_roomId, OSDK_sponsoredEventId, OSDK_language,
            OSDK_ChlngrClubId, OSDK_clubId, OSDK_clubIdInverse, OSDK_clubLeagueId, OSDK_clubPlaygroupSize, OSDK_clubSkill, 
            fifaGameMode, fifaTeamLevel, fifaHalfLength, fifaCustomController, fifaGameSpeed, fifaPPT ]
    gmmGameAttrValues = {
        OSDK_gameMode = [abstain, 0, 1, 2, 3, 4, 5, 6, 8, 9 ]            
        OSDK_matchupHash = [ 0, 1, 2, 3, 4, 5, 6, 8, 9 ]
        OSDK_roomId = [ 0, 1, 2, 3, 4, 5, 6, 8, 9 ]
        OSDK_sponsoredEventId = [ 0, 1, 2, 3, 4, 5, 6, 8, 9 ]
        OSDK_language = [ abstain, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, random ]
        OSDK_ChlngrClubId = [ 0, 1, 2, 3, 4, 5, 6, 8, 9 ]
        OSDK_clubId = [ 0, 1, 2, 3, 4, 5, 6, 8, 9 ]
        OSDK_clubIdInverse = [ 0, 1, 2, 3, 4, 5, 6, 8, 9 ]
        OSDK_clubLeagueId = [ 0, 1, 2 ]
        OSDK_clubPlaygroupSize = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
        OSDK_clubSkill = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
        fifaGameMode = [ -1, 0, 1, 2, 3, 4, 5, 6 ]
        fifaTeamLevel = [ abstain, -1, 0, 1, 2, random ]
        fifaHalfLength = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
        fifaCustomController = [abstain, -1, 0, random ]
        fifaGameSpeed = [ 0, 1, 2 ]
        fifaPPT = [ 0, 1 ]
    }
    
    gmmGameReportTypes = [ otp:50, club:50 ]
    
    # Executes no additional actions / tests
    action = noop  
}   
 

logging = {
    level = INFO
    
    categories = {
       gamemanager = DEBUG
    }
}

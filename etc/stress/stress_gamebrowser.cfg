#
# Configuration file for the stress tester
#

# Define the connection and protocol parameters
connection-info = {
    protocol = fire
    encoder = heat
    decoder = heat

    # Total number of connections to use
    num-connections = 15

    # Control whether SSL is used or not
    secure = false
}

#
# This following block controls how instances are started up.
#
startup = {
    # Number of instances to start up in a given pass
    # A block size of 0 will start all instances simultaneously
    block-size = 10

    # Delay between starting instances in milliseconds
    instance-delay = 20

    # Delay between starting blocks in milliseconds
    block-delay = 400
}

#
# Define the account/authentication parameters used for account creation and authentication
#
account = {
    # Specify the starting integer value to use when generating email addresses.  This value
    # should be adjusted when multiple stress tester instances are running in parallel against the
    # same blaze server to avoid overlap of account names.  For example, if each stress tester
    # instance was configurated for 1000 connections, then the first config file would set this
    # to 0 and the second instance would set this to 1000.
    start-index = 1

    # Define the email address pattern used for authentication and account creation
    email-format = "blaze-stress%05x@ea.com"

    # Define the password used for authentication each account
    password = "password"

    # Define the persona format used when creating personas.  This is not used for authentication.
    # Authentication will just choose the first available persona associated with a master account.
    persona-format = "s%05x"

    # Define the namespace used when creating personas.
    namespace = "description"

    express-pc-login = true

    # Define the TOS version used when creating new accounts.
    tos = "2.0"

    xbox360Accounts = [
#include "stress/xbox360.cfg"
    ]

}

#
# Define the list of stress modules that will be instantiated
#
modules = [ gamebrowser ]

#
# Define how the available instances/connections are distributed amongst the different modules
#
distribution = {
    gamebrowser = 1.0

}

#
# Configuration data specific to the dummy module
#
gamebrowser = {
    # Define the number of milliseconds between RPC calls
    delay = 1000

    # Control whether a dummy instance needs to authenticate its user before issuing its configured
    # RPC calls.
    login = true

    # Define which action to execute
    action = noop
    #action = getGameData

    # the fraction of instances that create games.  The rest join
    gameCreators = 0.3

    listConfigName = default

    # the minimum duration of a list subscription in milliseconds
    listLife = 240000

    # Once minimum listLife is hit, chance list gets deleted (for dispersing create/destroys)
    listDestroyChance = 0.4

    # if using subscription lists, otherwise snapshots
    subscriptionLists = true;

    # delay before game browser functionality initiates
    gameBrowserDelay = 700

    # number of game/player attributes to assign.
    numGameAttribs = 100

    # Allowed size of game browser lists
    gameListSize = 10

    listGetDataChance = 0.1

    #
    # Game Manager utility configuration
    #
    
    # percent chance of a settings update on the ame
    gmGameSettingsRandomUpdates = 0.1
    # Number of cycles a game should last
    gmGameLifespan = 360
    # Number of cycles a player should last
    gmGamePlayerLifespan = 180
    # Max number of players for a game (random number from min to this)
    gmGamePlayerSeed = 16
    # Minimum number of player in a game.
    gmGamePlayerLowerLimit = 8

}

logging = {
    level = DEBUG
}



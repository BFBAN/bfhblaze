#
# Configuration file for the stress tester
#

# Define the connection and protocol parameters
connection-info = {
    protocol = fire
    encoder = heat
    decoder = heat

    # Total number of connections to use
    num-connections = 10

    # Control whether SSL is used or not
    secure = false
}

#
# This following block controls how instances are started up.
#
startup = {
    # Number of instances to start up in a given pass
    # A block size of 0 will start all instances simultaneously
    block-size = 0

    # Delay between starting instances in milliseconds
    instance-delay = 2117

    # Delay between starting blocks in milliseconds
    block-delay = 0
}

#
# Define the account/authentication parameters used for account creation and authentication
#
account = {
    # Specify the starting integer value to use when generating email addresses.  This value
    # should be adjusted when multiple stress tester instances are running in parallel against the
    # same blaze server to avoid overlap of account names.  For example, if each stress tester
    # instance was configurated for 1000 connections, then the first config file would set this
    # to 0 and the second instance would set this to 1000.
    start-index = 5

    # Define the email address pattern used for authentication and account creation
    email-format = "blaze-stress%05x@ea.com"

    # Define the password used for authentication each account
    password = "password"

    # Define the persona format used when creating personas.  This is not used for authentication.
    # Authentication will just choose the first available persona associated with a master account.
    persona-format = "s%05x"

    # Define the namespace used when creating personas.
    //namespace = "description"
      namespace = "ps3"

    # Define the TOS version used when creating new accounts.
    tos = "2.0"
}

#
# Define the list of stress modules that will be instantiated
#
modules = [ 
            //stats, 
            authentication 
          ]

#
# Define how the available instances/connections are distributed amongst the different modules
#
distribution = {
    // Stats gets 100% of the instances
    // stats = 0.5,
    authentication = 1
}

#
# Configuration data specific to the dummy module
#
dummy = {
    // Define which RPC to use
    action = pokeSlave

    // Define the number of milliseconds between RPC calls
    delay = 0

    // Control whether a dummy instance needs to authenticate its user before issuing its configured
    // RPC calls.
    login = false
}


authentication = {
    // Define which RPC to use
    action = AuthenticationStressTest
    // if true the values from 'xbox360.cfg' file are used as external id and gamer tag
    // otherwise values are generated based on sequential number
    useXboxStockAcc = false 

    #
    # Database creation parameters
    #

    # target database for clubs
    dbhost = tiger.online.ea.com
    dbport = 3306
    database = "clubs_tracy"
    dbuser = "root"
    dbpass = ""
    recreateDatabase = false
    totalUsers = 1000000

    // Random generator seed, if < 0, used srand(time)
    randSeed = -1
    minAccId = 1000000   // used to generate persona name and e-mail
    maxAccId = 1014000
    email-format = "blaze-stresx%05x@ea.com"
    persona-format = "x%05x"
    
    minContextId = 1
    contextCount = 1000
    maxEntityId = 3000000
    maxLbStartRank = 100000
    maxPeriodOffset = 0
    maxIdCount = 64
    sampleSize = 6 // number of 5 sec periods
    
    // hitRate expresses probability of hitting RPC. Values are relative and are normalized against sum 
    // type of value is 'double'.
    scenarioList = {
        loginAcc = { hitRate = 0 },
        loginAccPers = { hitRate = 1 },
        createAcc = { hitRate = 0 },
        createXboxAcc = { hitRate = 1 },
        createPs3Acc = { hitRate = 0 },
        expressLogin = { hitRate = 1 },
        getTosInfoAndAccept = { hitRate = 1 },
        xboxLogin = { hitRate = 1 },
        entitlementsSc = { hitRate = 1 }
    }

    // Define the number of milliseconds between RPC calls
    delay = 3041

    // Control whether an instance needs to authenticate its user before issuing its configured
    // RPC calls.
    login = false

    xuids = [
    #include "stress/xbox360.cfg"
    ]
}


stats = {

    action = runAllTests
    // Random generator seed, if < 0, used srand(time)
    randSeed = -1
    minContextId = 1
    contextCount = 1000
    seqEntityId = 1 // if != 0, it generates entities sequentially, otherwise randomly
    minEntityId = 1
    maxEntityId = 10
    maxLbStartRank = 100000
    maxPeriodOffset = 0
    maxIdCount = 64
    sampleSize = 6 // number of 5 sec periods
    
    // hitRate expresses probability of hitting RPC. Values are relative and are normalized against sum 
    // type of value is 'double'.
    // rowCtr is a number of rows involved in the operation
    rpcList = {
    updateStats = { hitRate = 0, rowCtr = 64 },
    getLeaderboard = { hitRate = 0, rowCtr = 50 },
    getCenteredLeaderboard = { hitRate = 0, rowCtr = 50 },
    getFilteredLeaderboard = { hitRate = 0, rowCtr = 50 },
    getStatsByGroup = { hitRate = 0, rowCtr = 50 },
    getLeaderboardTree = { hitRate = 0, rowCtr = 50 }
    getStatsByGroupAsync = { hitRate = 0, rowCtr = 50 }
    getStats = { hitRate = 0, rowCtr = 50 }
    getLeaderboardFolder = { hitRate = 0, rowCtr = 50 }
    getStatGroup = { hitRate = 0, rowCtr = 50 }
    getLeaderboardGroup = { hitRate = 0, rowCtr = 50 }
    deleteStatsByContext = { hitRate = 0, rowCtr = 50 }
    deleteStats = { hitRate = 0, rowCtr = 50 }
    }

    // Define the number of milliseconds between RPC calls
    delay = 2000

    // Control whether an instance needs to authenticate its user before issuing its configured
    // RPC calls.
    login = false
}

logging = {
    level = INFO
}


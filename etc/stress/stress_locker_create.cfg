#
# Configuration file for the stress tester
#

# Define the connection and protocol parameters
connection-info = {
    protocol = fire
    encoder = heat
    decoder = heat

    # Total number of connections to use
    num-connections = 30000

    # Control whether SSL is used or not
    secure = false
}

#
# This following block controls how instances are started up.  To avoid overloading the server/DB,
# startup of stress instances is done in chunks with delays between each chunk until all instances
# have been started.  Care must be used when setting the block-delay and instance-delay values.
# (instance-delay * block-size) should be less than block-delay or you'll end up with overlap.
# Overlapped starts will still work but may not be the desired behaviour.
#
startup = {
    # Number of instances to start up in a given pass
    # A block size of 0 will start all instances simultaneously
    block-size = 200

    # Delay between starting instances in milliseconds
    instance-delay = 50

    # Delay between starting blocks in milliseconds
    block-delay = 60000
}

#
# This following block lists servers in addition to the server passed in the command line the tester
# attempt to connect instances to.  For example if there are two servers listed here, and one in the command line,
# then instance 0 will connect to the command line server, 1 = server-0, 2 = server-1, etc.   Note if no server
# specified in the command line, the stress tester will still use the servers listed below if any are listed.
# 
servers = {
    server-0 = "gosapp01.eao.abn-iad.ea.com:12000"
    server-1 = "gosapp01.eao.abn-iad.ea.com:12005"
}

#
# Define the account/authentication parameters used for account creation and authentication
#
account = {
    # Specify the starting integer value to use when generating email addresses.  This value
    # should be adjusted when multiple stress tester instances are running in parallel against the
    # same blaze server to avoid overlap of account names.  For example, if each stress tester
    # instance was configurated for 1000 connections, then the first config file would set this
    # to 0 and the second instance would set this to 1000.
    start-index = 30000

    # Define the email address pattern used for authentication and account creation
    email-format = "blaze-stress%05x@ea.com"

    # Define the password used for authentication each account
    password = "password"

    # Define the persona format used when creating personas.  This is not used for authentication.
    # Authentication will just choose the first available persona associated with a master account.
    persona-format = "s%05x"

    # Define the namespace used when creating personas.
    namespace = "ps3"
    
    # Specify whether to use express login instead of platform-specific login.
    express-pc-login = true

    # Define the TOS version used when creating new accounts.
    tos = "2.0"       
}

#
# Define the list of stress modules that will be instantiated
#
modules = [ locker ]

#
# Define how the available instances/connections are distributed amongst the different modules
#
distribution = {
    # locker gets 100% of the instances
    locker = 1.0
}

#
# Configuration data specific to the locker module
#
locker = {
    # Define parameters used for the RPC action
    #   contentCategory = the content category used in the action.
    #   createContentCount = create and confirm at most N content items
    #   deleteContentType = filters content to test by type "owner|copy|bookmark|all"
    #   listContentEntityId = retrieves this entity's locker contents
    contentCategory = "various"
    createContentCount = 1
    deleteContentType = "all"
    listContentEntityId = 0
    leaderboardType = "MOST_RECENT"
    leaderboardView = "overall"
    leaderboardRowCount = 100
    postfixSubContent = false

    # Define which RPC to use
    # action = noop
    action = createContent    
    # action = deleteContent
    # action = createAndDeleteContent
    # action = listContent    
    # action = listContentAndUpdateContentInfo
    # action = getTopN
    $ action = getTopNMacro
    
    # Define the number of milliseconds between RPC calls
    delay = 10000

    num_trials = 1
    num_execs_per_trial = 5
    # delay_per_trial = 1000

    # Control whether a dummy instance needs to authenticate its user before issuing its configured
    # RPC calls.
    login = true
    waitActive = false
}

logging = {
    level = INFO
}

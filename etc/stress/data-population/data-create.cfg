#
# Configuration file for the stress tester to use
# to quickly load data into the userinfo and clubs
# database tables via direct SQL queries.
#

// Blaze slave servers to connect to.
// If multiple listed, connections will be
// distributed via roundrobin
servers = {
    server-0 = "localhost:43740"
}

# Define the connection and protocol parameters
connection-info = {
    protocol = fire
    encoder = heat
    decoder = heat

    # Total number of connections to use
    # Only need a single connection for each module loaded
    # as the data populations in this configuration will
    # insert data directly into the database
    num-connections = 2

    # Control whether SSL is used or not
    secure = false
}

logging = {
    level = INFO
}

#
# Define the list of stress modules that will be instantiated
#
modules = [ authentication,clubs ]

#
# Configuration data specific to the authentication module
#
authentication = {

###########################################
# FILL OUT SECTION BELOW TO CREATE USERS
    // Random generator seed, if < 0, used srand(time)
    randSeed = -1
    email-format = "blaze-stresx%05x@ea.com"
    persona-format = "x%05x"
    // The min Nucleus Account/Persona Id to start with
    // when creating users.  Blaze stress_login bypass
    // start with STRESS_NUCLEUS_ID_BASE = 1000000000000
    minAccId = 1000000000000

    # target database for clubs
    dbhost = 
    dbport = 
    database = 
    dbuser = 
    dbpass = 
    recreateDatabase = true
    totalUsers = 753000
############################################
# This section can be ignored
    num_trials = 1
    num_execs_per_trial = 1
    action = AuthenticationStressTest

    scenarioList = {
        loginAcc = { hitRate = 0 },
        loginAccPers = { hitRate = 0 },
        createAcc = { hitRate = 0 },
        createXboxAcc = { hitRate = 0 },
        createPs3Acc = { hitRate = 0 },
        expressLogin = { hitRate = 0 },
        getTosInfoAndAccept = { hitRate = 0 },
        xboxLogin = { hitRate = 0 },
        entitlementsSc = { hitRate = 0 }
    }
}

#
# Configuration data specific to the clubs module
#
clubs = {
###########################################
# FILL OUT SECTION BELOW TO POPULATE CLUBS DB
    recreateDatabase = true
    #
    # Database creation parameters
    #

    # target database for clubs
    dbhost = 
    dbport = 
    database = 
    dbuser = 
    dbpass = 

    clubname = "club%05x"
    abbrev = "%05x"
    desc = "%05x"
    
    # number of clubs with specified number of members
    clubCountMembers_1 = 140000
    clubCountMembers_3 = 15000
    clubCountMembers_6 = 20500
    clubCountMembers_12 = 7500
    clubCountMembers_20 = 1500
    clubCountMembers_30 = 1500
    clubCountMembers_50 = 1000
    # this number needs to be <= the total number of users created via the authentication section above
    totalUsers = 753000 
    
    # patterns and params for generating news
    newsBody= "This is news %05x"
    newsPerClub = 10

    # parameters for awards
    awardsPerClub = 10

    # parameters for records
    recordsPerClub = 10

    # please note that all clubs will be created with default seasonLevel=0
    # and region=0 which could be invalid for your title's customized
    # club game report processing.  Please update directly in database
    # if needed.

############################################
# This section can be ignored
    testingConditions = mature
    configFilePath = {
        gamereporting = "component/gamereporting.cfg",
        stats = "component/stats/stats.cfg"
    }

    num_trials = 1
    num_execs_per_trial = 1
    action = getClubs
    clubsToGet = 1
    clubMembershipsToGet = 1
}
